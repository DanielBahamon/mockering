<% content_for :title, "Edit: #{@mock.title} â€¢ Mockering" %>
<div class="container">
	<br>
	<h1 class="_title _1">Edit mock</h1>
	<br>
	
	<div class="form-group">
		<%= form_for @mock, html: { multipart: true } do |f| %>

            <div class="row m-0">
              <div class="col-12 col-md-4">
                <h4 class="_fw600">Edit information</h4>
                <br>
              </div>
              <div class="col-12 col-md-8">
                <div class="row">
		              <div class="col-12 ">
		                <div class="field">
		                  <%= f.label :title %><br/>
		                  <%= f.text_field :title, class: 'form-control', required: true %>
		                </div>
		              </div>
		              <div class="col-12 ">
		                <div class="field">
		                  <%= f.label :category %><br/>
		                  <%= f.select :category, Mock.categories.map {|key, value| [key.humanize, key]}, prompt: "Choose one", class: "form-control _select", required: true %>
		                </div>
		              </div>
		              <div class="col-12">
		                <div class="d-table fullscreen">
		                    <div class="d-table-cell v-middle">
		                        <div class="field">
		                        	<div class="custom-control custom-switch _1 pl-0">
									  <%= f.check_box :privated, class: "custom-control-input" %>
									  <label class="custom-control-label" for="mock_privated"><b>Private mock</b></label>
									</div>
		                        </div>
		                    </div>
		                </div>
		              </div>
		              <div class="col-12">
		                <div class="d-table fullscreen">
		                    <div class="d-table-cell v-middle">
		                        <div class="field">
		                        	<div class="custom-control custom-switch _1 pl-0">
										<%= f.check_box :age_restricted, class: "custom-control-input"  %>
										<label class="custom-control-label" for="mock_age_restricted"><b>Age restricted mock</b></label>
									</div>
		                        </div>
		                    </div>
		                </div>
		              </div>
		              <div class="col-12">
		                <div class="d-table fullscreen">
		                    <div class="d-table-cell v-middle">
		                        <div class="field">
		                        	<div class="custom-control custom-switch _1 pl-0">
		                        		<%= f.check_box :unlist, class: "custom-control-input" %>
										<label class="custom-control-label" for="mock_unlist"><b>Unlist mock</b></label>
									</div>
		                        </div>
		                    </div>
		                </div>
		              </div>
		        </div>
              </div>
            </div>
            <br>
            <div class="row m-0">
              <div class="col-12 col-md-4">
                <h4 class="_fw600">Edit thumbnail</h4>
                <br>
              </div>
              <div class="col-12 col-md-8">
                <section class="col-12 _col_inputsaccount p-b-0 _upload_big mt-5">
                    <div class="progress d-none" id="progress-bar">
                      <div class="progress-bar progress-bar-stripped active" role="progressbar" style="width: 0%;">
                        <span class="sr-only" id="progress-bar-text"></span>
                      </div>
                    </div>
                    <div class="fullscreen p-5 _file_upload">
                      <div class="d-table fullscreen">
                        <div class="d-table-cell v-middle text-center">
                          <img class="_img_upload_mock_2" src="https://mockering.s3-sa-east-1.amazonaws.com/assets/upload.svg">
                          <h6 class="_fw600 _is_not_ready_2 d-block" style="opacity: 0.6">Update your thumbnail (JPG/PNG/GIF)</h6>
                          <h6 class="_fw600 _is_ready_2 d-none" style="opacity: 0.6">Your thumbnail is ready to update!</h6>
                        </div>
                      </div>
                    </div>
                    <%= f.file_field :picture, class: "file-selector", id: "file-selector_2" %>
                </section>
              </div>
            </div>
		    <br>
            <div class="row m-0">
              <div class="col-12 col-md-8 offset-md-4 text-right">
                <div class="row m-0">
                  <div class="col-12 col-md-6 offset-md-3">
                    <%= f.submit 'Update!', class: 'btn btn-lg btn-block _btn_form_next', id: 'fileUpload', data: { disable_with: 'Update, please hold on...' } %>
                  </div>
                </div>
              </div>
            </div>
		<% end %>
	</div>

	<script type="text/javascript">
	  const output2 = document.getElementById('output_2');
	  if (window.FileList && window.File) {
	    document.getElementById('file-selector_2').addEventListener('change', event => {
	      output2.innerHTML = '';
	      for (const file of event.target.files) {
	        const li = document.createElement('b');
	        const name = file.name ? file.name : 'NOT SUPPORTED';
	        const type = file.type ? file.type : 'NOT SUPPORTED';
	        const size = file.size ? file.size : 'NOT SUPPORTED';
	        li.textContent = `name: ${name}, type: ${type}, size: ${size}`;
	        output2.appendChild(li);
	      }
	    }); 
	  }
	</script>
	<script type="text/javascript">
	  const fileSelector2 = document.getElementById('file-selector_2');
	  const output4 = document.getElementById('output_2');
	  if (window.FileList && window.File) {
	    fileSelector2.addEventListener('dragover', event => {
	      event.stopPropagation();
	      event.preventDefault();
	      event.dataTransfer.dropEffect = 'copy';
	    });
	    fileSelector2.addEventListener('drop', event => {
	      output4.innerHTML = '';
	      event.stopPropagation();
	      event.preventDefault();
	      const files = event.dataTransfer.files;
	      for (let i = 0; i < files.length; i++) {
	        const li = document.createElement('li');
	        const file = files[i];
	        const name = file.name ? file.name : 'NOT SUPPORTED';
	        const type = file.type ? file.type : 'NOT SUPPORTED';
	        const size = file.size ? file.size : 'NOT SUPPORTED';
	        li.textContent = `name: ${name}, type: ${type}, size: ${size}`;
	        output4.appendChild(li);
	      }
	    }); 
	  }
	</script>
	<script type="text/javascript">
		
	  $('#file-selector_2').blur(function(){
	    if( !$(this).val() ) {
	      $("._is_ready_2").toggleClass('d-block');
	      $("._is_ready_2").toggleClass('d-none');
	      $("._is_not_ready_2").toggleClass('d-none');
	      $("._is_not_ready_2").toggleClass('d-block');
	      $("._img_upload_mock_2").toggleClass('_on');
	    }
	  });
	</script>
</div>